<?xml version="1.0" encoding="UTF-8"?>    
    <beans xmlns="http://www.springframework.org/schema/beans"    
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"    
        xmlns:context="http://www.springframework.org/schema/context"    
        xmlns:mvc="http://www.springframework.org/schema/mvc"  
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:aop="http://www.springframework.org/schema/aop" 
        xsi:schemaLocation="http://www.springframework.org/schema/beans      
                            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd      
                            http://www.springframework.org/schema/context      
                            http://www.springframework.org/schema/context/spring-context-3.1.xsd      
                            http://www.springframework.org/schema/mvc      
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                            http://www.springframework.org/schema/tx      
                            http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                            http://www.springframework.org/schema/aop     
                            http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">     
        <!-- 使用注解式注入 -->    
        <context:annotation-config />     
		<mvc:annotation-driven/>
		<!-- 缓存管理 -->
		<!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 -->
		
		
		
        <!-- 自动扫描 -->    
        <context:component-scan base-package="com.ssm" />    
        <context:component-scan base-package="com.ssm.util" />           
        <!-- DAO接口所在包名，Spring会自动查找其下的类 -->    
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">    
            <!--basePackage指定要扫描的包，在此包之下的映射器都会被搜索到。    
                                                                  可指定多个包，包与包之间用逗号或分号分隔-->    
            <property name="basePackage" value="com.ssm.dao" />    
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>    
        </bean>      
            
      <!-- 数据库配置-->    
      <!-- 引入配置文件 -->    
     <context:property-placeholder location="classpath*:jdbc.properties" ignore-unresolvable="true" />  
        
	    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">    
	        <property name="driverClassName" value="${jdbc.driver}" />    
	        <property name="url" value="${jdbc.url}" />    
	        <property name="username" value="${jdbc.username}" />    
	        <property name="password" value="${jdbc.userpass}" />    
	        <!-- 初始化连接大小 -->    
	        <property name="initialSize" value="${jdbc.initialSize}"></property>    
	        <!-- 连接池最大数量 -->    
	        <property name="maxActive" value="${jdbc.maxActive}"></property>    
	        <!-- 连接池最大空闲 -->    
	        <property name="maxIdle" value="${jdbc.maxIdle}"></property>    
	        <!-- 连接池最小空闲 -->    
	        <property name="minIdle" value="${jdbc.minIdle}"></property>    
	        <!-- 获取连接最大等待时间 -->    
	        <property name="maxWait" value="${jdbc.maxWait}"></property>    
	    </bean>    
    
	    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->    
	    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">    
	        <property name="dataSource" ref="dataSource" />    
	        <!-- 自动扫描mapping.xml文件 -->    
	        <property name="mapperLocations" value="classpath:com/ssm/mapper/*.xml"></property>    
	    </bean>   
            
        <!-- 导入事务配置 -->    
	        <bean id="transactionManager"    
	            class="org.springframework.jdbc.datasource.DataSourceTransactionManager">    
	            <property name="dataSource" ref="dataSource" />    
	        </bean> 
	         <!-- 配置事物传播性 --> 
	        <tx:advice id="daoAdvice" transaction-manager="transactionManager">
	
			    <tx:attributes>
			
			      <tx:method name="save*" propagation="REQUIRED"/>
			
			      <tx:method name="del*" propagation="REQUIRED"/>
			
			      <tx:method name="update*" propagation="REQUIRED"/>
			
			      <tx:method name="add*" propagation="REQUIRED"/>
			
			      <tx:method name="find*" propagation="REQUIRED"/>
			
			      <tx:method name="get*" propagation="REQUIRED"/>
			
			      <tx:method name="insert*" propagation="REQUIRED"/>
			
			    </tx:attributes>
				
			</tx:advice>
         
		<aop:config>
		     <aop:pointcut expression="execution(* com.ssm.service.imp.*.*(..))" id="pointcut"/>
		     <aop:advisor advice-ref="daoAdvice" pointcut-ref="pointcut"/>
		</aop:config>
    
        

       <!-- 上传文件 -->
       <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>  
       
      <!-- shiro配置 -->
      
      
      
       <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
	    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	        <property name="securityManager" ref="securityManager"/>
	    </bean>
	  <import resource="classpath:spring-shiro.xml"/>
       
       
    </beans>    
